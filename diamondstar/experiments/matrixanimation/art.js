// Generated by CoffeeScript 1.6.3
(function() {
  var a, b, c, canvas, context, copyMatrix, currentMatrix, draw, f, faceUp, h, idle, lookDown, lookLeft, lookRight, lookUp, mouseMoved, o, p, s, t, w,
    _this = this;

  canvas = document.getElementById('c');

  context = canvas.getContext('2d');

  s = 'fccd8e';

  h = '8c5c4d';

  a = '691c63';

  t = 'dc5173';

  c = 'b3b3b3';

  w = 'b3b3b3';

  b = '4f4f4f';

  p = 'ff9fb6';

  f = 'ad51b9';

  o = 'TRANSPARENT';

  idle = [[o, h, h, h, o], [h, h, s, s, h], [h, s, s, s, h], [o, o, s, o, o], [a, t, c, t, a], [a, t, t, t, a], [a, t, t, t, a], [s, w, b, w, s], [o, p, p, p, o], [o, p, o, p, o], [o, f, o, f, o]];

  currentMatrix = idle;

  copyMatrix = function(matrix) {
    var copy, row, _i, _len;
    copy = [];
    for (_i = 0, _len = matrix.length; _i < _len; _i++) {
      row = matrix[_i];
      copy.push(row.slice(0));
    }
    return copy;
  };

  lookRight = copyMatrix(idle);

  lookRight[1][2] = h;

  lookRight[2][1] = h;

  lookLeft = copyMatrix(idle);

  lookLeft[1][1] = s;

  lookLeft[1][3] = h;

  lookLeft[2][3] = h;

  lookUp = copyMatrix(idle);

  lookUp[0] = [o, o, o, o, o];

  lookUp[1] = [h, s, s, s, h];

  lookUp[2] = [h, s, s, s, h];

  lookUp[3] = [h, h, s, h, h];

  faceUp = copyMatrix(idle);

  faceUp[1] = [h, h, h, h, h];

  faceUp[2] = [h, h, h, h, h];

  faceUp[4] = [a, t, t, t, a];

  faceUp[7] = [s, w, w, w, s];

  lookDown = copyMatrix(idle);

  lookDown[0] = [o, o, o, o, o];

  lookDown[1] = [h, h, h, h, h];

  lookDown[2] = [h, h, h, h, h];

  lookDown[3] = [h, s, s, s, h];

  lookDown[4] = [a, t, t, t, a];

  mouseMoved = function(e) {
    var _ref;
    if (e.pageY > 150) {
      return currentMatrix = lookDown;
    } else if (e.pageY > 50) {
      if ((75 < (_ref = e.pageX) && _ref < 160)) {
        currentMatrix = idle;
      }
      if (e.pageX < 100) {
        currentMatrix = lookLeft;
      }
      if (e.pageX > 150) {
        return currentMatrix = lookRight;
      }
    } else if (e.pageY < 20) {
      return currentMatrix = lookUp;
    }
  };

  draw = function() {
    var row, value, x, y, _results;
    canvas.width = canvas.width;
    context.translate(70, 50);
    _results = [];
    for (y in currentMatrix) {
      row = currentMatrix[y];
      _results.push((function() {
        var _results1;
        _results1 = [];
        for (x in row) {
          value = row[x];
          if (!(value === o)) {
            context.fillStyle = value;
            _results1.push(context.fillRect(x * 10, y * 10, 10, 10));
          } else {
            _results1.push(void 0);
          }
        }
        return _results1;
      })());
    }
    return _results;
  };

  document.body.addEventListener('mousemove', mouseMoved);

  setInterval(draw, 30);

}).call(this);
