// Generated by CoffeeScript 1.6.3
(function() {
  var _this = this;

  document.addEventListener('keydown', function(event) {
    if (event.keyCode === 13) {
      event.preventDefault();
      save();
      return initStories();
    }
  });

  window.stories = [];

  window.storyNum = void 0;

  window.initStories = function() {
    var i, _i;
    window.storyNum = document.getElementById('storyCount').innerHTML;
    for (i = _i = 0; 0 <= storyNum ? _i < storyNum : _i > storyNum; i = 0 <= storyNum ? ++_i : --_i) {
      if (stories[i] == null) {
        newStory();
      }
    }
    return loadStories();
  };

  window.calcTotal = function() {
    var els, i, str, time, _i;
    els = document.getElementsByClassName('est');
    str = "";
    for (i = _i = 0; 0 <= storyNum ? _i < storyNum : _i > storyNum; i = 0 <= storyNum ? ++_i : --_i) {
      str += els[i].innerHTML;
    }
    time = parseTime(str);
    return document.getElementById('total').innerHTML = timeToStr(time);
  };

  window.save = function() {
    var el, els, i, _i, _ref, _results;
    el = document.getElementById('stories');
    els = el.getElementsByClassName('story');
    _results = [];
    for (i = _i = 0, _ref = els.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      console.log(els[i]);
      _results.push(stories[i] = "<div id='story_" + stories.length + "' class=\"story\">\n	" + els[i].innerHTML + "\n</div>");
    }
    return _results;
  };

  window.loadStories = function() {
    var i, storiesElement, _i, _ref, _results;
    storiesElement = document.getElementById("stories");
    storiesElement.innerHTML = "";
    _results = [];
    for (i = _i = 0, _ref = window.storyNum; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      _results.push(storiesElement.innerHTML += "" + stories[i]);
    }
    return _results;
  };

  window.copyToClipboard = function(index) {
    var benefit, el, els, functionality, story, user;
    el = document.getElementById('stories');
    els = el.getElementsByClassName('story');
    story = els[index];
    user = story.getElementsByClassName('user')[0].innerHTML;
    functionality = story.getElementsByClassName('functionality')[0].innerHTML;
    benefit = story.getElementsByClassName('benefit')[0].innerHTML;
    return window.prompt("Copy to clipboard: Ctrl+C, Enter", "As a " + user + ", I want " + functionality + ", so that I can " + benefit);
  };

  window.newStory = function() {
    var s;
    s = "<div id='story_" + stories.length + "' class=\"story\">\n	<p>As a<i class='user' contenteditable=\"true\">user</i>, I want <i class='functionality' contenteditable=\"true\">some functionality</i>, so that I can <i class='benefit' contenteditable=\"true\">have some benefit</i>.\n	<b>Estimate: <i class='est' contenteditable=\"true\" spellcheck=\"false\">0m</i></b>.\n		<a href =\"#\" onClick= 'copyToClipboard(" + stories.length + ")' /><img class='clip' src='clipboard.jpg'></img></a>\n\n	</p>\n</div>";
    return stories.push(s);
  };

  window.parseTime = function(str) {
    var time;
    time = {
      hours: str.match(/\d+h/g),
      mins: str.match(/\d+m/g),
      days: str.match(/\d+d/g),
      weeks: str.match(/\d+w/g)
    };
    return time;
  };

  window.stripTime = function(str) {
    return (str.match(/\d/g)).join('');
  };

  window.tallyTime = function(time) {
    var day, hour, min, total, week, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;
    total = {
      hours: 0,
      mins: 0,
      days: 0,
      weeks: 0
    };
    if (time.hours != null) {
      _ref = time.hours;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        hour = _ref[_i];
        total.hours += parseInt(stripTime(hour));
      }
    }
    if (time.mins != null) {
      _ref1 = time.mins;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        min = _ref1[_j];
        total.mins += parseInt(stripTime(min));
      }
    }
    if (time.days != null) {
      _ref2 = time.days;
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        day = _ref2[_k];
        total.days += parseInt(stripTime(day));
      }
    }
    if (time.weeks != null) {
      _ref3 = time.weeks;
      for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
        week = _ref3[_l];
        total.weeks += parseInt(stripTime(week));
      }
    }
    total.hours += Math.floor(total.mins / 60);
    total.mins = total.mins % 60;
    total.days += Math.floor(total.hours / 8);
    total.hours = total.hours % 8;
    total.weeks += Math.floor(total.days / 5);
    total.days = total.days % 5;
    return total;
  };

  window.timeToStr = function(time) {
    var str, tally;
    tally = tallyTime(time);
    str = "" + [tally.weeks > 0 ? "" + tally.weeks + "w" : void 0] + [tally.days > 0 ? " " + tally.days + "d" : void 0] + [tally.hours > 0 ? " " + tally.hours + "h" : void 0] + [tally.mins > 0 ? " " + tally.mins + "m" : void 0];
    return str;
  };

  setInterval(calcTotal, 30);

  initStories();

}).call(this);
